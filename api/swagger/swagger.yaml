swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: 127.0.0.1:8080
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /user:
    x-swagger-router-controller: user
    post:
      operationId: createUser
      description: add a new user to the list
      parameters:
        - name: first_name
          description: user properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      operationId: getAllUsers
      description: get the users list
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/{user_id}:
    x-swagger-router-controller: user
    get:
      operationId: getUserById
      description: Retrieves a user by ID
      parameters:
        - name: user_id
          description: User ID
          in: query
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      operationId: updateUser
      description: Updates a user by ID
      parameters:
        - name: user_id
          description: User ID
          in: query
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: deleteUser
      description: Deletes a user
      parameters:
        - name: user_id
          description: user properties
          in: query
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetRemovedUser"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /login:
    x-swagger-router-controller: user
    post:
      operationId: loginUser
      description: check user
      parameters:
        - name: email
          description: user properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/loginUser"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUsersListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /logout:
    x-swagger-router-controller: user
    post:
      operationId: logoutUser
      description: logout user
      parameters:
        - name: title
          description: user properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/logoutUser"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetLogoutResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /restaurant:
    x-swagger-router-controller: restaurant
    post:
      operationId: addRestaurant
      description: Creates a new restaurant
      parameters:
        - name: name
          description: Name of the restaurant
          in: body
          required: true
          schema:
            $ref: "#/definitions/Restaurant"
        - name: address
          description: Address of the restaurant
          in: body
          required: true
          schema:
            $ref: "#/definitions/Restaurant"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/Restaurant"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      operationId: retrieveRestaurant
      description: Retrieves the list of Restaurants
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Restaurant"
  /restaurant/{restaurant_id}:
    x-swagger-router-controller: restaurant
    get:
      operationId: retrieveRestaurantsByID
      description: Retrieves a restaurant by ID
      parameters:
        - name: restaurant_id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetRestaurantListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      operationId: updateRestaurantByID
      description: Updates a restaurant by ID
      parameters:
        - name: restaurant_id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Restaurant"
definitions:
  User:
    type: object
    properties:
      first_name:
        type: string
        description: description
      last_name:
        type: string
        description: description
      email:
        type: string
        description: description
      password:
        type: string
        description: description
  SignupResponse:
    type: object
    properties:
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
      password:
        type: string
      create_date:
        type: string
  GetUsersListResponse:
    required:
      - users
    properties:
      users:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            title:
              type: string
  loginUser:
    type: object
    properties:
      email:
        type: string
        description: task object name
      password:
        type: string
        description: task description
  UpdateResponse:
    properties:
      \n:
        type: number
      nModified:
        type: number
      ok:
        type: number
  logoutUser:
    type: object
    properties:
      id:
        type: string
        description: task object name
  GetLogoutResponse:
    type: object
    properties:
      title:
        type: string
        description: task object name
      login:
        type: string
        description: task description
  UpdateUser:
    type: object
    properties:
      id:
        type: string
        description: description
      first_name:
        type: string
        description: description
      last_name:
        type: string
        description: description
      email:
        type: string
        description: description
      password:
        type: string
        description: description
  deleteUser:
    type: object
    properties:
      id:
        type: string
        description: task object name
  GetRemovedUser:
    type: object
    properties:
      title:
        type: string
        description: task object name
      login:
        type: string
        description: task description
  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
        description: a short comment
    required:
      - success
      - description
  Restaurant:
    type: object
    properties:
      title:
        type: string
        description: Restaurant  name
  GetRestaurantListResponse:
    properties:
      id:
        type: string
      data:
        type: object
        properties:
          name:
            type: string
          mealList:
            type: object
          orderlist:
            type: object
          id:
            type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
